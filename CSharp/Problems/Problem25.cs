using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Numerics;
using System.Text;
using System.Threading.Tasks;
using CSharp.Helpers;

namespace CSharp.Problems {
	public class Problem25 : IProblem {
		//The Fibonacci sequence is defined by the recurrence relation:

		//Fn = Fn−1 + Fn−2, where F1 = 1 and F2 = 1.
		//Hence the first 12 terms will be:

		//F1 = 1
		//F2 = 1
		//F3 = 2
		//F4 = 3
		//F5 = 5
		//F6 = 8
		//F7 = 13
		//F8 = 21
		//F9 = 34
		//F10 = 55
		//F11 = 89
		//F12 = 144
		//The 12th term, F12, is the first term to contain three digits.

		//What is the index of the first term in the Fibonacci sequence to contain 1000 digits?

		public string GetAnswer() {
			var answer = solve();
			return Label.GetLabel(this.GetType(), answer.ToString());
		}

		private BigInteger solve() {
			BigInteger a = 0;
			BigInteger b = 1;
			BigInteger temp = 0;
			long index = 1;
			var isTest = false;
			var x = isTest ? BigInteger.Parse("100") : BigInteger.Parse
			do {
				index++;
				temp = a;
				a = b;
				b = temp + b;
			} while (b < x);
			return index;
		}
	}
}